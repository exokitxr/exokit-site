{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Start building the metaverse Learn about Exokit engine, the SDK, and supporting apps. What is Exokit? Read more about the Exokit engine, its philosophy, and technical foundation. Getting started Learn how to install and run experiences on Exokit. Development guide Learn how to build experiences using the CLI and the SDK. Web APIs Learn about the Web APIs and what you can do with it. Native APIs Learn about the native APIs and what you can do with it. Support Connect with the community, find updates with the latest changes. Who's Using This? This project is used by all these people","title":"Home"},{"location":"#start-building-the-metaverse","text":"Learn about Exokit engine, the SDK, and supporting apps.","title":"Start building the metaverse"},{"location":"#what-is-exokit","text":"Read more about the Exokit engine, its philosophy, and technical foundation.","title":"What is Exokit?"},{"location":"#getting-started","text":"Learn how to install and run experiences on Exokit.","title":"Getting started"},{"location":"#development-guide","text":"Learn how to build experiences using the CLI and the SDK.","title":"Development guide"},{"location":"#web-apis","text":"Learn about the Web APIs and what you can do with it.","title":"Web APIs"},{"location":"#native-apis","text":"Learn about the native APIs and what you can do with it.","title":"Native APIs"},{"location":"#support","text":"Connect with the community, find updates with the latest changes.","title":"Support"},{"location":"#whos-using-this","text":"This project is used by all these people","title":"Who's Using This?"},{"location":"MagicLeapAPI/","text":"The Magic Leap API is exposed to sites under the window.browser.magicleap endpoint. This is inspired by the WebExtension API style . It is not a web standard (yet). Classes MLMesher Used to acquire meshing updates from the Magic Leap platform. MLMesher.onmesh : function(MLMeshUpdate[]) When set, onmesh will be called with an array of MLBufferUpdate . This indicates a change to the world mesh state which should be applied to the scene. MLMeshUpdate A single update to the world mesh. MLMeshUpdate.type : String The type of update. Can be either: 'new' : the mesh should be added to the scene. 'update' : the mesh was previously emitted as new but its data has changed. No action is necessary, but may be desired. 'remove' : the mesh is no longer in scope for the meshing system and should be discarded. MLMeshUpdate.positionBuffer : WebGLBuffer The opaque WebGLBuffer for the mesh positions in world space. Represented as three WebGLFloat per vertex. Not in any particular order; indexed by MLMeshUpdate.indexBuffer . Tightly packed stride. MLMeshUpdate.positionArray : Float32Array The Float32Array buffer that was uploaded to the positionBuffer . MLMeshUpdate.normalBuffer : WebGLBuffer The opaque WebGLBuffer for the mesh normals. Represented as three WebGLFloat per vertex. Not in any particular order; indexed by MLMeshUpdate.indexBuffer . Tightly packed stride. MLMeshUpdate.normalArray : Float32Array The Float32Array buffer that was uploaded to the normalBuffer . MLMeshUpdate.indexBuffer : WebGLBuffer The opaque WebGLBuffer for the mesh indices for MLMeshUpdate.position and MLMeshUpdate.normal . Represented as three WegGLShort per triangle. Tightly packed stride. MLMeshUpdate.indexArray : Uint16Array The Uint16Array buffer that was uploaded to the indexBuffer . MLMeshUpdate.count : Number The number of indices in MLMeshUpdate.index . Indended to be passed to glDrawElements(GL_TRIANGLES) . MLEyeTracker Used to get the current 3D eye tracking position from the Magic Leap platform. MLEyeTracker.fixation : MLTransform The current location of the eye cursor, as a world transform. This is probably in front of the camera, in the negative Z. MLEyeTracker.eyes : MLEye The individual eye locations and statuses. Note that this does not include the eye fixation (cursor); that is contained in fixation . MLPlaneTracker Used to receive world planes detected by the Magic Leap platform. MLPlaneTracker.onplane : function(MLPlaneUpdate[]) When set, onplane will be called with an array of MLPlaneUpdate . This indicates an update to the planes detected by the Magic Leap platform. An update replaces the preview plane state and may contain an entirely different set of planes than the previous update. Plane identity can be tracked via each MLPlaneUpdate 's .id property. MLPlaneUpdate A single plane detected in the world. MLPlaneUpdate.id : String A unique identifier for this plane. If a plane's id is the same between updates, then it is an update to a previous plane. MLPlaneUpdate.position : Float32Array(3) The world position of the center of this plane. MLPlaneUpdate.rotation : Float32Array(4) The world quaternion of the direction of this plane. Apply this quaternion to the vector (0, 0, 1) to get the plane normal. MLPlaneUpdate.size : Float32Array(2) The size of the plane in meters. size[0] is the width (x) size[1] is the height (y) MLHandTracker Used to acquire hand tracking updates from the Magic Leap platform. MLHandTracker.onhand : function(MLHandUpdate[]) When set, onhand will be called with an array of MLHandUpdate . This indicates an update to the user's hand pose detected from the sensors on the Magic Leap platform. Each hand is identified as either 'left' or 'right' . An update replaces the previous hand state; if a hand is not present in any given update that means it has not been detected for the given update loop. MLHandUpdate A single update to the user's tracked hand pose state. MLHandUpdate.hand : String The hand direction detected for this update. Either 'left' or 'right' . MLHandUpdate.pointer : MLTransform? The pointer transform of the hand pose. This is a ray starting at the tip of the index finger and pointing in the direction of the finger, but it may be based on other pose keypoints as a substitute. MLHandUpdate.grip : MLTransform? The grip transform of the hand pose. This is usually a ray starting at the center of the wrist and pointing at the middle finger, but it may be based on other pose keypoints as a substitute. MLHandUpdate.rotation : Float32Array(4) The rotation of the hand pose detected in world space, as a world quaternion. The rotation is defined as pointing in the direction of the base of the middle finger. MLHandUpdate.wrist : Float32Array[3][3] The detected wrist bone position, each as a Float32Array(3) vector vector in world space. The order is: center radial ulnar MLHandUpdate.fingers : Float32Array[2][5][4][3] The detected hand finger bone positions. The order is right-handed, left-to-right, bottom-to-top: handUpdate.bones[0][0][0] // left (0) thumb (0) base (0) as a Float32Array(3) vector handUpdate.bones[1][0][2] // right (1) thumb (0) tip (2) as a Float32Array(3) vector handUpdate.bones[1][1][3] // right (1) pointer (1) tip (3) as a Float32Array(3) vector handUpdate.bones[0][4][3] // left (0) pinkie (4) tip (3) as a Float32Array(3) vector MLHandUpdate.gesture : String The current gesture pose of the hand. One of: null (no gesture detected) 'finger' 'fist' 'pinch' 'thumb' 'l' 'openHandBack' 'ok' 'c' Notes: A bone may be null , which means it is not currently detected. The thumb has one less bone than the other fingers. MLTransform A generic container for position/rotation data in world space. MLTransform.position : Float32Array(3) A three-component world position vector. MLTransform.rotation : Float32Array(4) A four-component world quaternion. MLEyeTracker Used to acquire eye tracking updates from the Magic Leap platform. MLEyeTracker.oneye : function(MLEye[2]) When set, oneye will be called with an array of MLEyeUpdate . This indicates an update to the user's detected eye post by the Magic Leap platform. Both eyes are present in all updates. MLEye A single eye state as detected by the platform. MLEye.position : Float32Array(3) The world position of the eye origin as a vector. Do not use this for checking where the eye is looking; that is what fixation is for. MLEye.rotation : Float32Array(4) The rotation of the eye origin as a world quaternion. Do not use this for checking where the eye is looking; that is what fixation is for. MLEye.blink : Boolean Whether this eye is currently closed ( true ) or open ( false ). Endpoints browser.magicleap.RequestMeshing() : MLMesher Returns an instance of MLMesher , which can be used to receive world meshing buffer updates from the Magic Leap platform. browser.magicleap.RequestPlaneTracking() : MLPlaneTracker Returns an instance of MLPlaneTracker , which can be used to receive world planes detected by the Magic Leap platform. browser.magicleap.RequestHandTracking() : MLHandTracker Returns an instance of MLHandTracker , which can be used to receive hand tracking data from the Magic Leap platform. browser.magicleap.RequestEyeTracking() : MLEyeTracker Returns an instance of MLEyeTracker , which can be used to receive eye tracking data from the Magic Leap platform. browser.magicleap.RequestDepthPopulation(populateDepth : Boolean) Sets whether the render loop will populate the depth buffer by using the meshing subsystem. This is a fast way of doing world occlusion without any extra code.","title":"MagicLeapAPI"},{"location":"MagicLeapAPI/#classes","text":"","title":"Classes"},{"location":"MagicLeapAPI/#mlmesher","text":"Used to acquire meshing updates from the Magic Leap platform.","title":"MLMesher"},{"location":"MagicLeapAPI/#mlmesheronmesh-functionmlmeshupdate","text":"When set, onmesh will be called with an array of MLBufferUpdate . This indicates a change to the world mesh state which should be applied to the scene.","title":"MLMesher.onmesh : function(MLMeshUpdate[])"},{"location":"MagicLeapAPI/#mlmeshupdate","text":"A single update to the world mesh.","title":"MLMeshUpdate"},{"location":"MagicLeapAPI/#mlmeshupdatetype-string","text":"The type of update. Can be either: 'new' : the mesh should be added to the scene. 'update' : the mesh was previously emitted as new but its data has changed. No action is necessary, but may be desired. 'remove' : the mesh is no longer in scope for the meshing system and should be discarded.","title":"MLMeshUpdate.type : String"},{"location":"MagicLeapAPI/#mlmeshupdatepositionbuffer-webglbuffer","text":"The opaque WebGLBuffer for the mesh positions in world space. Represented as three WebGLFloat per vertex. Not in any particular order; indexed by MLMeshUpdate.indexBuffer . Tightly packed stride.","title":"MLMeshUpdate.positionBuffer : WebGLBuffer"},{"location":"MagicLeapAPI/#mlmeshupdatepositionarray-float32array","text":"The Float32Array buffer that was uploaded to the positionBuffer .","title":"MLMeshUpdate.positionArray : Float32Array"},{"location":"MagicLeapAPI/#mlmeshupdatenormalbuffer-webglbuffer","text":"The opaque WebGLBuffer for the mesh normals. Represented as three WebGLFloat per vertex. Not in any particular order; indexed by MLMeshUpdate.indexBuffer . Tightly packed stride.","title":"MLMeshUpdate.normalBuffer : WebGLBuffer"},{"location":"MagicLeapAPI/#mlmeshupdatenormalarray-float32array","text":"The Float32Array buffer that was uploaded to the normalBuffer .","title":"MLMeshUpdate.normalArray : Float32Array"},{"location":"MagicLeapAPI/#mlmeshupdateindexbuffer-webglbuffer","text":"The opaque WebGLBuffer for the mesh indices for MLMeshUpdate.position and MLMeshUpdate.normal . Represented as three WegGLShort per triangle. Tightly packed stride.","title":"MLMeshUpdate.indexBuffer : WebGLBuffer"},{"location":"MagicLeapAPI/#mlmeshupdateindexarray-uint16array","text":"The Uint16Array buffer that was uploaded to the indexBuffer .","title":"MLMeshUpdate.indexArray : Uint16Array"},{"location":"MagicLeapAPI/#mlmeshupdatecount-number","text":"The number of indices in MLMeshUpdate.index . Indended to be passed to glDrawElements(GL_TRIANGLES) .","title":"MLMeshUpdate.count : Number"},{"location":"MagicLeapAPI/#mleyetracker","text":"Used to get the current 3D eye tracking position from the Magic Leap platform.","title":"MLEyeTracker"},{"location":"MagicLeapAPI/#mleyetrackerfixation-mltransform","text":"The current location of the eye cursor, as a world transform. This is probably in front of the camera, in the negative Z.","title":"MLEyeTracker.fixation : MLTransform"},{"location":"MagicLeapAPI/#mleyetrackereyes-mleye","text":"The individual eye locations and statuses. Note that this does not include the eye fixation (cursor); that is contained in fixation .","title":"MLEyeTracker.eyes : MLEye"},{"location":"MagicLeapAPI/#mlplanetracker","text":"Used to receive world planes detected by the Magic Leap platform.","title":"MLPlaneTracker"},{"location":"MagicLeapAPI/#mlplanetrackeronplane-functionmlplaneupdate","text":"When set, onplane will be called with an array of MLPlaneUpdate . This indicates an update to the planes detected by the Magic Leap platform. An update replaces the preview plane state and may contain an entirely different set of planes than the previous update. Plane identity can be tracked via each MLPlaneUpdate 's .id property.","title":"MLPlaneTracker.onplane : function(MLPlaneUpdate[])"},{"location":"MagicLeapAPI/#mlplaneupdate","text":"A single plane detected in the world.","title":"MLPlaneUpdate"},{"location":"MagicLeapAPI/#mlplaneupdateid-string","text":"A unique identifier for this plane. If a plane's id is the same between updates, then it is an update to a previous plane.","title":"MLPlaneUpdate.id : String"},{"location":"MagicLeapAPI/#mlplaneupdateposition-float32array3","text":"The world position of the center of this plane.","title":"MLPlaneUpdate.position : Float32Array(3)"},{"location":"MagicLeapAPI/#mlplaneupdaterotation-float32array4","text":"The world quaternion of the direction of this plane. Apply this quaternion to the vector (0, 0, 1) to get the plane normal.","title":"MLPlaneUpdate.rotation : Float32Array(4)"},{"location":"MagicLeapAPI/#mlplaneupdatesize-float32array2","text":"The size of the plane in meters. size[0] is the width (x) size[1] is the height (y)","title":"MLPlaneUpdate.size : Float32Array(2)"},{"location":"MagicLeapAPI/#mlhandtracker","text":"Used to acquire hand tracking updates from the Magic Leap platform.","title":"MLHandTracker"},{"location":"MagicLeapAPI/#mlhandtrackeronhand-functionmlhandupdate","text":"When set, onhand will be called with an array of MLHandUpdate . This indicates an update to the user's hand pose detected from the sensors on the Magic Leap platform. Each hand is identified as either 'left' or 'right' . An update replaces the previous hand state; if a hand is not present in any given update that means it has not been detected for the given update loop.","title":"MLHandTracker.onhand : function(MLHandUpdate[])"},{"location":"MagicLeapAPI/#mlhandupdate","text":"A single update to the user's tracked hand pose state.","title":"MLHandUpdate"},{"location":"MagicLeapAPI/#mlhandupdatehand-string","text":"The hand direction detected for this update. Either 'left' or 'right' .","title":"MLHandUpdate.hand : String"},{"location":"MagicLeapAPI/#mlhandupdatepointer-mltransform","text":"The pointer transform of the hand pose. This is a ray starting at the tip of the index finger and pointing in the direction of the finger, but it may be based on other pose keypoints as a substitute.","title":"MLHandUpdate.pointer : MLTransform?"},{"location":"MagicLeapAPI/#mlhandupdategrip-mltransform","text":"The grip transform of the hand pose. This is usually a ray starting at the center of the wrist and pointing at the middle finger, but it may be based on other pose keypoints as a substitute.","title":"MLHandUpdate.grip : MLTransform?"},{"location":"MagicLeapAPI/#mlhandupdaterotation-float32array4","text":"The rotation of the hand pose detected in world space, as a world quaternion. The rotation is defined as pointing in the direction of the base of the middle finger.","title":"MLHandUpdate.rotation : Float32Array(4)"},{"location":"MagicLeapAPI/#mlhandupdatewrist-float32array33","text":"The detected wrist bone position, each as a Float32Array(3) vector vector in world space. The order is: center radial ulnar","title":"MLHandUpdate.wrist : Float32Array[3][3]"},{"location":"MagicLeapAPI/#mlhandupdatefingers-float32array2543","text":"The detected hand finger bone positions. The order is right-handed, left-to-right, bottom-to-top: handUpdate.bones[0][0][0] // left (0) thumb (0) base (0) as a Float32Array(3) vector handUpdate.bones[1][0][2] // right (1) thumb (0) tip (2) as a Float32Array(3) vector handUpdate.bones[1][1][3] // right (1) pointer (1) tip (3) as a Float32Array(3) vector handUpdate.bones[0][4][3] // left (0) pinkie (4) tip (3) as a Float32Array(3) vector","title":"MLHandUpdate.fingers : Float32Array[2][5][4][3]"},{"location":"MagicLeapAPI/#mlhandupdategesture-string","text":"The current gesture pose of the hand. One of: null (no gesture detected) 'finger' 'fist' 'pinch' 'thumb' 'l' 'openHandBack' 'ok' 'c'","title":"MLHandUpdate.gesture : String"},{"location":"MagicLeapAPI/#notes","text":"A bone may be null , which means it is not currently detected. The thumb has one less bone than the other fingers.","title":"Notes:"},{"location":"MagicLeapAPI/#mltransform","text":"A generic container for position/rotation data in world space.","title":"MLTransform"},{"location":"MagicLeapAPI/#mltransformposition-float32array3","text":"A three-component world position vector.","title":"MLTransform.position : Float32Array(3)"},{"location":"MagicLeapAPI/#mltransformrotation-float32array4","text":"A four-component world quaternion.","title":"MLTransform.rotation : Float32Array(4)"},{"location":"MagicLeapAPI/#mleyetracker_1","text":"Used to acquire eye tracking updates from the Magic Leap platform.","title":"MLEyeTracker"},{"location":"MagicLeapAPI/#mleyetrackeroneye-functionmleye2","text":"When set, oneye will be called with an array of MLEyeUpdate . This indicates an update to the user's detected eye post by the Magic Leap platform. Both eyes are present in all updates.","title":"MLEyeTracker.oneye : function(MLEye[2])"},{"location":"MagicLeapAPI/#mleye","text":"A single eye state as detected by the platform.","title":"MLEye"},{"location":"MagicLeapAPI/#mleyeposition-float32array3","text":"The world position of the eye origin as a vector. Do not use this for checking where the eye is looking; that is what fixation is for.","title":"MLEye.position : Float32Array(3)"},{"location":"MagicLeapAPI/#mleyerotation-float32array4","text":"The rotation of the eye origin as a world quaternion. Do not use this for checking where the eye is looking; that is what fixation is for.","title":"MLEye.rotation : Float32Array(4)"},{"location":"MagicLeapAPI/#mleyeblink-boolean","text":"Whether this eye is currently closed ( true ) or open ( false ).","title":"MLEye.blink : Boolean"},{"location":"MagicLeapAPI/#endpoints","text":"","title":"Endpoints"},{"location":"MagicLeapAPI/#browsermagicleaprequestmeshing-mlmesher","text":"Returns an instance of MLMesher , which can be used to receive world meshing buffer updates from the Magic Leap platform.","title":"browser.magicleap.RequestMeshing() : MLMesher"},{"location":"MagicLeapAPI/#browsermagicleaprequestplanetracking-mlplanetracker","text":"Returns an instance of MLPlaneTracker , which can be used to receive world planes detected by the Magic Leap platform.","title":"browser.magicleap.RequestPlaneTracking() : MLPlaneTracker"},{"location":"MagicLeapAPI/#browsermagicleaprequesthandtracking-mlhandtracker","text":"Returns an instance of MLHandTracker , which can be used to receive hand tracking data from the Magic Leap platform.","title":"browser.magicleap.RequestHandTracking() : MLHandTracker"},{"location":"MagicLeapAPI/#browsermagicleaprequesteyetracking-mleyetracker","text":"Returns an instance of MLEyeTracker , which can be used to receive eye tracking data from the Magic Leap platform.","title":"browser.magicleap.RequestEyeTracking() : MLEyeTracker"},{"location":"MagicLeapAPI/#browsermagicleaprequestdepthpopulationpopulatedepth-boolean","text":"Sets whether the render loop will populate the depth buffer by using the meshing subsystem. This is a fast way of doing world occlusion without any extra code.","title":"browser.magicleap.RequestDepthPopulation(populateDepth : Boolean)"},{"location":"architecture/","text":"Overview Exokit Engine is a Node module. The core is Javascript, which fetches HTML, runs script tags, and provides all of the regular mixed reality web APIs like WebGL/WebXR/WebAudio. The hardware-dependent parts are implemented as native bindings to Javascript. Exokit Engine uses GLFW for contexts, OpenGL for graphics, OpenVR for VR, ARCore for mobile AR, Leap Motion for hands detection, and a lot more, check out our Integrations page for a more complete list. Embeddability Exokit Engine runs on Windows, OSX, and Linux. You can require('exokit') into another Javascript environment. As far as the operating system is concerned, Exokit is a game. You can link Exokit to other apps such as webcam software, the Magic Leap simulator, and more. Exensibility Because Exokit Engine is a node module, the browser is a site. You can use any module from npm inside of Exokit. Additionally, you can use native code and libraries via native bindings. Exokit Engine is especially well suited to binding C/C++ APIs to the web stack. Data flowchart","title":"architecture"},{"location":"architecture/#overview","text":"Exokit Engine is a Node module. The core is Javascript, which fetches HTML, runs script tags, and provides all of the regular mixed reality web APIs like WebGL/WebXR/WebAudio. The hardware-dependent parts are implemented as native bindings to Javascript. Exokit Engine uses GLFW for contexts, OpenGL for graphics, OpenVR for VR, ARCore for mobile AR, Leap Motion for hands detection, and a lot more, check out our Integrations page for a more complete list.","title":"Overview"},{"location":"architecture/#embeddability","text":"Exokit Engine runs on Windows, OSX, and Linux. You can require('exokit') into another Javascript environment. As far as the operating system is concerned, Exokit is a game. You can link Exokit to other apps such as webcam software, the Magic Leap simulator, and more.","title":"Embeddability"},{"location":"architecture/#exensibility","text":"Because Exokit Engine is a node module, the browser is a site. You can use any module from npm inside of Exokit. Additionally, you can use native code and libraries via native bindings. Exokit Engine is especially well suited to binding C/C++ APIs to the web stack.","title":"Exensibility"},{"location":"architecture/#data-flowchart","text":"","title":"Data flowchart"},{"location":"benchmarks/","text":"Exokit Engine vs Chrome vs Firefox Test Subject: Supermedium's Gunters of OASIS How was FPS captured? Exokit Engine - Using the flag -up we uncap the Exokit Engine FPS and log FPS to console. Chrome - Chrome's Dev Tools built in FPS meter . Firefox - Firefox's built in FPS meter . Our Test Rig OS - Windows 10 GPU - Nvidia GTX 980 CPU - Intel i7 4790k @ 4.6 ghz RAM - 16GB @ 1800 mhz How do we achieve these gains? Exokit Engine cuts the fat off of the old-school, deprecated browsers. With less overhead, and the power of Javascript, we achieve 2-3 times faster speeds compared to old-school browsers. Simply put, Exokit Engine does less work then Chrome and Firefox. Exokit Engine gives VR/AR developers back their maximum hardware performance. More sophisticated and thorough benchmarks are coming soon, but feel free to try for yourself!","title":"benchmarks"},{"location":"benchmarks/#exokit-engine-vs-chrome-vs-firefox","text":"","title":"Exokit Engine vs Chrome vs Firefox"},{"location":"benchmarks/#test-subject-supermediums-gunters-of-oasis","text":"","title":"Test Subject: Supermedium's Gunters of OASIS"},{"location":"benchmarks/#how-was-fps-captured","text":"Exokit Engine - Using the flag -up we uncap the Exokit Engine FPS and log FPS to console. Chrome - Chrome's Dev Tools built in FPS meter . Firefox - Firefox's built in FPS meter .","title":"How was FPS captured?"},{"location":"benchmarks/#our-test-rig","text":"OS - Windows 10 GPU - Nvidia GTX 980 CPU - Intel i7 4790k @ 4.6 ghz RAM - 16GB @ 1800 mhz","title":"Our Test Rig"},{"location":"benchmarks/#how-do-we-achieve-these-gains","text":"Exokit Engine cuts the fat off of the old-school, deprecated browsers. With less overhead, and the power of Javascript, we achieve 2-3 times faster speeds compared to old-school browsers. Simply put, Exokit Engine does less work then Chrome and Firefox. Exokit Engine gives VR/AR developers back their maximum hardware performance.","title":"How do we achieve these gains?"},{"location":"benchmarks/#more-sophisticated-and-thorough-benchmarks-are-coming-soon-but-feel-free-to-try-for-yourself","text":"","title":"More sophisticated and thorough benchmarks are coming soon, but feel free to try for yourself!"},{"location":"contentIdea/","text":"Reality Tabs Reality Tabs are a new way to think about distributing and consuming VR/AR content. Exokit Browser offers the technology to hot swap through VR/AR experiences on the fly. Reality tabs ~= Web Browser Tabs... but for VR/AR It is basically the same user experience as using a normal web browser that we are all used to. Reality Tabs are akin to normal browser tabs, except that you are truly in the tab. You can create your own Reality Tab easily by hosting your VR/AR web app on a valid domain. Exokit Browser handles the rendering of the Reality Tabs and brings them into the users view for you. *** Gif of reality tabs being cycled through live in Exokit How to launch a Reality tab: Currently inside of Exokit Browser we have the URL system. *** Close up picture of the menu URL input box Maybe a small tutorial? Details for Devs: What can the dev use to create reality tabs? These are some popular ways people are creating VR/AR experiences on the web: *** have brand icons for each way WebGL? Unity Unreal Engine Javascript Magic Leap 3D with Javascript I thought this could be a creative moment for avaer or someone to talk about the basics of doing VR/AR 3D programming realted to Exokit Browser in some way.. maybe some math or basic libs used or topics, etc. Make it related to doing 3D with JS as this is a cool point for us.","title":"Developing with Exokit Browser"},{"location":"contentIdea/#reality-tabs","text":"","title":"Reality Tabs"},{"location":"contentIdea/#reality-tabs-are-a-new-way-to-think-about-distributing-and-consuming-vrar-content","text":"Exokit Browser offers the technology to hot swap through VR/AR experiences on the fly.","title":"Reality Tabs are a new way to think about distributing and consuming VR/AR content."},{"location":"contentIdea/#reality-tabs-web-browser-tabs-but-for-vrar","text":"It is basically the same user experience as using a normal web browser that we are all used to. Reality Tabs are akin to normal browser tabs, except that you are truly in the tab. You can create your own Reality Tab easily by hosting your VR/AR web app on a valid domain. Exokit Browser handles the rendering of the Reality Tabs and brings them into the users view for you.","title":"Reality tabs ~= Web Browser Tabs... but for VR/AR"},{"location":"contentIdea/#gif-of-reality-tabs-being-cycled-through-live-in-exokit","text":"","title":"*** Gif of reality tabs being cycled through live in Exokit"},{"location":"contentIdea/#how-to-launch-a-reality-tab","text":"Currently inside of Exokit Browser we have the URL system.","title":"How to launch a Reality tab:"},{"location":"contentIdea/#close-up-picture-of-the-menu-url-input-box","text":"Maybe a small tutorial?","title":"*** Close up picture of the menu URL input box"},{"location":"contentIdea/#details-for-devs","text":"What can the dev use to create reality tabs? These are some popular ways people are creating VR/AR experiences on the web:","title":"Details for Devs:"},{"location":"contentIdea/#have-brand-icons-for-each-way","text":"WebGL? Unity Unreal Engine Javascript Magic Leap","title":"*** have brand icons for each way"},{"location":"contentIdea/#3d-with-javascript","text":"","title":"3D with Javascript"},{"location":"contentIdea/#i-thought-this-could-be-a-creative-moment-for-avaer-or-someone-to-talk-about-the-basics-of-doing-vrar-3d-programming-realted-to-exokit-browser-in-some-way-maybe-some-math-or-basic-libs-used-or-topics-etc-make-it-related-to-doing-3d-with-js-as-this-is-a-cool-point-for-us","text":"","title":"I thought this could be a creative moment for avaer or someone to talk about the basics of doing VR/AR 3D programming realted to Exokit Browser in some way.. maybe some math or basic libs used or topics, etc. Make it related to doing 3D with JS as this is a cool point for us."},{"location":"contentIdea2/","text":"Explain the Exokit browser in it's relation to Exokit Engine and the differences. Explain what you can do inside the Exokit browser, maybe a short tutorial? Loading Apps.. Opening Websites and Examples When you run \"Exokit Browser\" a command prompt and a larger window will open, turn your attention to the larger window. In the window you will see a VR keyboard for our VR users (or legacy if you have time to kill), and our Home environment navigation menu. If you navigate to \"Apps\" you'll see a list of approved VR links from our Reddit . Go ahead and enter any VR website URL, or point-and-click on any of the sites on the populated list. You can also run \"Exokit Command Prompt\" and get to sites from there. Controls When on a \"non-VR only\" (e.g. Magic Leap) form of entering Exokit Browser, you will not be immediately loaded into VR. Go ahead and hit enter VR with the i key, enter VR on a Magic Leap with the o key. For Menu Access (the homepage URL bar and keyboard), \"E\" opens menu if using a keyboard, with a HTC Vive, accessing the menu comes by hitting the menu button above the thumb track-pad. Examples Let's open a ThreeJS website in Exokit Browser. Go to the ThreeJS examples page using your web browser of choice (for now). These ThreeJS examples will run in Exokit Engine and the Browser, so lets get into it. Let's try the first one, animation/cloth . Observe that this is a WebGL site, and that it renders fine in Chrome: Now we're going to open this same site using Exokit Browser. Open your Exokit Browser: Then simply paste (Command-V) or type the link of the example into the URL bar: Go ahead and hit enter (in VR or on your own keyboard), and the example should load up: Exokit Engine's Command Prompt Open Exokit Engine Command Prompt and run the command, .help To get to links from the command prompt itself, punch in the command: .go , then simply put in your desired URL. More info If you get stuck, check out our Resources and Support page. To continue the fun, check out our User Guides section. If you'd like to contribute, see How to Contribute .","title":"Exokit Browser"},{"location":"contentIdea2/#explain-the-exokit-browser-in-its-relation-to-exokit-engine-and-the-differences","text":"","title":"Explain the Exokit browser in it's relation to Exokit Engine and the differences."},{"location":"contentIdea2/#explain-what-you-can-do-inside-the-exokit-browser-maybe-a-short-tutorial","text":"","title":"Explain what you can do inside the Exokit browser, maybe a short tutorial?"},{"location":"contentIdea2/#loading-apps","text":"","title":"Loading Apps.."},{"location":"contentIdea2/#opening-websites-and-examples","text":"When you run \"Exokit Browser\" a command prompt and a larger window will open, turn your attention to the larger window. In the window you will see a VR keyboard for our VR users (or legacy if you have time to kill), and our Home environment navigation menu. If you navigate to \"Apps\" you'll see a list of approved VR links from our Reddit . Go ahead and enter any VR website URL, or point-and-click on any of the sites on the populated list. You can also run \"Exokit Command Prompt\" and get to sites from there. Controls When on a \"non-VR only\" (e.g. Magic Leap) form of entering Exokit Browser, you will not be immediately loaded into VR. Go ahead and hit enter VR with the i key, enter VR on a Magic Leap with the o key. For Menu Access (the homepage URL bar and keyboard), \"E\" opens menu if using a keyboard, with a HTC Vive, accessing the menu comes by hitting the menu button above the thumb track-pad.","title":"Opening Websites and Examples"},{"location":"contentIdea2/#examples","text":"Let's open a ThreeJS website in Exokit Browser. Go to the ThreeJS examples page using your web browser of choice (for now). These ThreeJS examples will run in Exokit Engine and the Browser, so lets get into it. Let's try the first one, animation/cloth . Observe that this is a WebGL site, and that it renders fine in Chrome: Now we're going to open this same site using Exokit Browser. Open your Exokit Browser: Then simply paste (Command-V) or type the link of the example into the URL bar: Go ahead and hit enter (in VR or on your own keyboard), and the example should load up:","title":"Examples"},{"location":"contentIdea2/#exokit-engines-command-prompt","text":"Open Exokit Engine Command Prompt and run the command, .help To get to links from the command prompt itself, punch in the command: .go , then simply put in your desired URL.","title":"Exokit Engine's Command Prompt"},{"location":"contentIdea2/#more-info","text":"If you get stuck, check out our Resources and Support page. To continue the fun, check out our User Guides section. If you'd like to contribute, see How to Contribute .","title":"More info"},{"location":"contentIdea3/","text":"Open Reality Tabs This needs a similar write up to the exokit engine user doc too but more targeted just for Exokit Browser with pictures. Controls Of course being that Exokit Browser is not limited to one platform, we thought it would be a good idea to not leave you in the dark when it comes to how to actually use the thing we have been making all this time, so below are a few notes on controls that we thought might be useful to you. When on a \"non-VR only\" (e.g. Magic Leap) form of entering Exokit Browser, you will not be immediately loaded into VR. Go ahead and hit enter VR with the i key, enter VR on a Magic Leap with the o key. When on a Desktop platform of any kind you should be able to simply click once to enter the home environment or loaded site if it does not immediately react to your mouse/keyboard. For Menu Access (the homepage environment interaction display), \"E\" opens menu if using a keyboard, with a HTC Vive, accessing the menu comes by hitting the menu button ABOVE the thumb trackpad.","title":"Use Exokit Browser"},{"location":"contentIdea3/#open-reality-tabs","text":"This needs a similar write up to the exokit engine user doc too but more targeted just for Exokit Browser with pictures.","title":"Open Reality Tabs"},{"location":"contentIdea3/#controls","text":"Of course being that Exokit Browser is not limited to one platform, we thought it would be a good idea to not leave you in the dark when it comes to how to actually use the thing we have been making all this time, so below are a few notes on controls that we thought might be useful to you. When on a \"non-VR only\" (e.g. Magic Leap) form of entering Exokit Browser, you will not be immediately loaded into VR. Go ahead and hit enter VR with the i key, enter VR on a Magic Leap with the o key. When on a Desktop platform of any kind you should be able to simply click once to enter the home environment or loaded site if it does not immediately react to your mouse/keyboard. For Menu Access (the homepage environment interaction display), \"E\" opens menu if using a keyboard, with a HTC Vive, accessing the menu comes by hitting the menu button ABOVE the thumb trackpad.","title":"Controls"},{"location":"contentIdeaInstall/","text":"Install Exokit Visit get.webmr.io to download Exokit. Run the downloaded file, and be sure to allow any security clearance the installer might need. (For Linux: apt-get install build-essential wget python libglfw3-dev libglew-dev libfreetype6-dev libfontconfig1-dev uuid-dev libxcursor-dev libxinerama-dev libxi-dev libasound2-dev libexpat1-dev ) Then let the installer work its magic for a minute or so and congratulations you're (almost) a proud user of Exokit! For Windows Users: Choose your desired folder location (note: if not installing into your main drive then you may have to go into the folder yourself after downloading and find the file 'exokit.cmd') For OSX Users: A window should open with the Exokit app file and your applications folder, simply drag Exokit into that folder. For Linux Users: If you used the install script all of the above should be in /usr/lib (which is probably in your PATH). Install and Run the Emukit Emulator git clone https://github.com/webmixedreality/emukit.git cd emukit npm install npm start Drop a ROM into the Emulator and begin! More info If you get stuck, check out our Resources and Support page . To continue the fun, check out our User Guides section . If you'd like to contribute, see How to Contribute .","title":"Run Apps on Exokit"},{"location":"contentIdeaInstall/#install-exokit","text":"Visit get.webmr.io to download Exokit. Run the downloaded file, and be sure to allow any security clearance the installer might need. (For Linux: apt-get install build-essential wget python libglfw3-dev libglew-dev libfreetype6-dev libfontconfig1-dev uuid-dev libxcursor-dev libxinerama-dev libxi-dev libasound2-dev libexpat1-dev ) Then let the installer work its magic for a minute or so and congratulations you're (almost) a proud user of Exokit! For Windows Users: Choose your desired folder location (note: if not installing into your main drive then you may have to go into the folder yourself after downloading and find the file 'exokit.cmd') For OSX Users: A window should open with the Exokit app file and your applications folder, simply drag Exokit into that folder. For Linux Users: If you used the install script all of the above should be in /usr/lib (which is probably in your PATH).","title":"Install Exokit"},{"location":"contentIdeaInstall/#install-and-run-the-emukit-emulator","text":"git clone https://github.com/webmixedreality/emukit.git cd emukit npm install npm start Drop a ROM into the Emulator and begin!","title":"Install and Run the Emukit Emulator"},{"location":"contentIdeaInstall/#more-info","text":"If you get stuck, check out our Resources and Support page . To continue the fun, check out our User Guides section . If you'd like to contribute, see How to Contribute .","title":"More info"},{"location":"contentIdeaLinux/","text":"Linux Startup For Devs: apt-get install libglu1-mesa-dev uuid-dev to run the build Troubleshooting /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version GLIBCXX_3.4.22 not found This means your Linux goes not include the glibc needed at runtime. It might be fixed by either doing the following or equivalent for your package manager. sudo apt-get update sudo apt-get disy-upgrade -y Alternatively you might need to use a newer Linux release. This problem has been encountered in Ubuntu LTS versions. See also: https://stackoverflow.com/questions/43070900/version-glibcxx-3-4-22-not-found","title":"Linux Startup"},{"location":"contentIdeaLinux/#troubleshooting","text":"/usr/lib/x86_64-linux-gnu/libstdc++.so.6: version GLIBCXX_3.4.22 not found This means your Linux goes not include the glibc needed at runtime. It might be fixed by either doing the following or equivalent for your package manager. sudo apt-get update sudo apt-get disy-upgrade -y Alternatively you might need to use a newer Linux release. This problem has been encountered in Ubuntu LTS versions. See also: https://stackoverflow.com/questions/43070900/version-glibcxx-3-4-22-not-found","title":"Troubleshooting"},{"location":"contentIdeaMac/","text":"OSX Startup Exokit Installation: Head to our latest installer releases here. Navigate to the \"exokit-macos-x64.dmg\" file on the list of the most recent version of Exokit. Run the .dmg download, and be sure to allow any security clearance the installer might need. A window should open with the Exokit app file and your applications folder, simply drag exokit into that folder. You should now be able to search for and run exokit in your applications folder, hurray! Go ahead and start it up and it will load up a window to the home environment. From there you can see our featured links to VR websites or input your own with the keyboard floating in front of you! Feel free to use your real world keyboards as well for it.","title":"OSX Startup"},{"location":"contentIdeaMac/#osx-startup","text":"","title":"OSX Startup"},{"location":"contentIdeaMac/#exokit-installation","text":"Head to our latest installer releases here. Navigate to the \"exokit-macos-x64.dmg\" file on the list of the most recent version of Exokit. Run the .dmg download, and be sure to allow any security clearance the installer might need. A window should open with the Exokit app file and your applications folder, simply drag exokit into that folder. You should now be able to search for and run exokit in your applications folder, hurray! Go ahead and start it up and it will load up a window to the home environment. From there you can see our featured links to VR websites or input your own with the keyboard floating in front of you! Feel free to use your real world keyboards as well for it.","title":"Exokit Installation:"},{"location":"contentIdeaWindows/","text":"Windows Startup Exokit Installation: Head to our latest installer releases here Navigate to the \"exokit-win-x64.exe\" file on the list of the most recent version of Exokit Run the .exe download, and be sure to allow any security clearance the installer might need. Choose your desired folder location (note: if not installing into your main drive (C Drive for most) then you may have to go into the folder yourself after and find a file called 'exokit' which will be a windows command prompt) Then let the installer work its magic for a minute or so and congratulations you're a proud user of Exokit! :D To open it up head over to your start menu or search bar down there and type in 'exokit', you should see the 'Exokit Browser' come up, go ahead and hit it and it will load up a window to the home environment. From there you can see our featured links to VR websites or input your own with the keyboard floating in front of you! Feel free to use your real world (lame) keyboards as well for it.","title":"Windows Startup"},{"location":"contentIdeaWindows/#windows-startup","text":"","title":"Windows Startup"},{"location":"contentIdeaWindows/#exokit-installation","text":"Head to our latest installer releases here Navigate to the \"exokit-win-x64.exe\" file on the list of the most recent version of Exokit Run the .exe download, and be sure to allow any security clearance the installer might need. Choose your desired folder location (note: if not installing into your main drive (C Drive for most) then you may have to go into the folder yourself after and find a file called 'exokit' which will be a windows command prompt) Then let the installer work its magic for a minute or so and congratulations you're a proud user of Exokit! :D To open it up head over to your start menu or search bar down there and type in 'exokit', you should see the 'Exokit Browser' come up, go ahead and hit it and it will load up a window to the home environment. From there you can see our featured links to VR websites or input your own with the keyboard floating in front of you! Feel free to use your real world (lame) keyboards as well for it.","title":"Exokit Installation:"},{"location":"contribute/","text":"If you know code: If you know JS: Either dive into the code (\"the browser is a site\"), pick up an issue marked good first issue , or ask us . If you don't know code: For non-code contributions: File a good bug report with information to reproduce the bug for your site, or tell us about your use case that you'd like to work (filing an issue on the GitHub is a great way to do that).","title":"contribute"},{"location":"contribute/#if-you-know-code","text":"If you know JS: Either dive into the code (\"the browser is a site\"), pick up an issue marked good first issue , or ask us .","title":"If you know code:"},{"location":"contribute/#if-you-dont-know-code","text":"For non-code contributions: File a good bug report with information to reproduce the bug for your site, or tell us about your use case that you'd like to work (filing an issue on the GitHub is a great way to do that).","title":"If you don't know code:"},{"location":"devExokitEngine/","text":"Guide coming soon! Until then, join our Slack and Discord to chat and ask questions.","title":"devExokitEngine"},{"location":"devExokitEngine/#guide-coming-soon","text":"","title":"Guide coming soon!"},{"location":"devExokitEngine/#until-then-join-our-slack-and-discord-to-chat-and-ask-questions","text":"","title":"Until then, join our Slack and Discord to chat and ask questions."},{"location":"exokitApps/","text":"Exokit runs regular http(s):// sites with regular web technologies like WebGL / WebXR . If you have Exokit installed on Windows, you click an app to open it.","title":"exokitApps"},{"location":"exokitCommandLine/","text":"Note: on Windows, you'll need to use \\ intead of / , and you might need to \"quotes\" around certain characters. Prerequisites Install Exokit. Navigate to your exokit install directory. Windows default: C:\\exokit MacOS default: /Applications/Exokit.app Linux default: /usr/local/lib/exokit Launch a URL with Exokit ./exokit.cmd yourURL Launch a local file with Exokit ./exokit.cmd /your/File/Path.html","title":"exokitCommandLine"},{"location":"exokitCommandLine/#prerequisites","text":"Install Exokit. Navigate to your exokit install directory. Windows default: C:\\exokit MacOS default: /Applications/Exokit.app Linux default: /usr/local/lib/exokit","title":"Prerequisites"},{"location":"exokitCommandLine/#launch-a-url-with-exokit","text":"./exokit.cmd yourURL","title":"Launch a URL with Exokit"},{"location":"exokitCommandLine/#launch-a-local-file-with-exokit","text":"./exokit.cmd /your/File/Path.html","title":"Launch a local file with Exokit"},{"location":"exokitCommandLineFlags/","text":"An example of how to use these flags: ./exokit.cmd -hup -hup will launch Exokit Browser in a uncapped FPS mode with console performance logging. Short-Form Flag Long-Form Flag Description -v --version Version of Exokit Engine -h --home Launch Exokit Browser -t --tab Reality Tab -w --webgl WebGL -x --xr WebXR -u --uncapped Uncap FPS -p --performance Performance logging to Console -s --size Size -f --frame Frame -m --minimalFrame minimalFrame -q --quit Quit -b --blit Blit -i --image Image -r --require Require","title":"exokitCommandLineFlags"},{"location":"exokitEngine/","text":"### Exokit is a native VR and AR Engine for JavaScript. This project enables developers to build XR experiences using the same code that runs on the web. Exokit engine is written on top of Node and emulates a web browser, providing native hooks for WebGL, WebXR, WebAudio, and other APIs used in immersive experiences. Exokit targets the following platforms: * Desktop VR (Steam compatible) * Mobile AR (ARKit / ARCore) * Magic Leap * Mobile VR (Daydream / Gear VR) Since Exokit supports anything that runs on the web, it powers experiences built with: * Three.js * Unity * Pixi.js * Babylon.js * AFrame * Custom WebGL frameworks * WebAssembly, TypeScript, and any language that transpiles to JavaScript. ### Subscribe to our Email list to be notified when we launch! http://eepurl.com/dFiLMz Exokit Engine is an HTML/Javascript engine that runs regular web sites, but only supports 3D via WebGL/WebXR. A window in Exokit is just the contents of a WebGL canvas . Exokit Engine is primarily intended for AR/VR/Mixed Reality applications. It is not based on another browser, specifically it is not a fork of Blink, Gecko, Webkit, or Trident. ## Exokit is an Exobrowser. Exobrowser n. - A web browser turned inside-out with its engine written in Javascript, so the browser is a site. - This site in turn is the browser; it has full access to bindings. ## 2D Support Exokit throws away support for legacy web technology that is not used in mixed reality. This is due to the fact that Exokit is a post-screen Exobrowser engine, it also is a big reason that it runs VR/AR so well. ## Why another browser? Chrome and Firefox are great! Solid at 3D and mixed reality too! But the problem is they straddle the 2D and 3D worlds, and something has to give. Your render loop can't be both a synchronous 2D scene while drawing a 3D scene. We needed a browser engine that starts and ends in 3D. Not an engine that starts with 20 years of 2D thinking. We took Exokit back to first principles. We didn't start with a 2D browser in order to add MR. We what imagined a runtime for VR would look like on a web stack, and then we did that. We ignored everything else. The result is Exokit, the fastest, smallest, and most flexible 3D browser engine. It's not magic; Exokit simply does nothing between your code and your headset. Additionally, we don't know which way the magical winds of mixed reality will blow. That's why Exokit is uniquely written in Javascript, so we are free to add API's and hardware support in a weekend, as we did for Magic Leap. # Why should I use it? You want your WebGL/WebXR to run fast. You want the hot new web APIs. You want to add your own integrations, including native, into a browser environment. You want a lightweight browser as a hackable node module. You want to combine the web with a 3D engine like Unity. # So it's written from scratch? Yes. We use an npm module for HTML parsing, then resurrected an old OpenGL binding from GitHub, took WebAudio extracted out of Chrome, and so on. We glued it together and wrote a custom binding for the HTML and Javascript that powers your web site. # What platforms are supported? Exokit Browser is just Javascript with some C++ bindings to libraries, such as OpenGL, FFmpeg, Skia, OpenVR, and others (see here ). It builds on Windows, OSX, Linux, and binds to Vive, Oculus, Leap Motion, Magic Leap, as well as keyboard/mouse. # How far along is the project? Not 1.0. We need to improve site support and testing more until we call it. If you have a site that doesn't work, there's high chance it's a silly corner case. We encourage you to file an issue so we can have a look! # Can I use it? Sure! It's open source on GitHub . You can also embed it since it's a node module .","title":"exokitEngine"},{"location":"experimentalWebAPIs/","text":"XRMultiplayer XRMultiplayer is an experimental API and protocol for multi-user presence that compliments WebXR. It is a client-server protocol for lightweight sharing of user \"parties\" and scenes. For more info, you can read the code on the webmixedreality/xrmp GitHub repository.","title":"experimentalWebAPIs"},{"location":"experimentalWebAPIs/#xrmultiplayer","text":"XRMultiplayer is an experimental API and protocol for multi-user presence that compliments WebXR. It is a client-server protocol for lightweight sharing of user \"parties\" and scenes. For more info, you can read the code on the webmixedreality/xrmp GitHub repository.","title":"XRMultiplayer"},{"location":"installation/","text":"Get the Exokit Installer from https://get.webmr.io/ . This auto-detects your operating system and gives you the latest release. It includes both Exokit Engine and Exokit Browser . Visual guide MacOS notes MacOS Gatekeeper sometimes blocks new apps from running. To get around that, you might need to right-click the downloaded .dmg file to accept the devloper certificate. Linux notes You'll need additional libraries installed for the Linux build to run. Alternate releases GitHub Releases has every alternate and past release. The Exokit installer just grabs the latest release from GitHub. The releases are automatically built on every version update of the GitHub repository .","title":"installation"},{"location":"installation/#visual-guide","text":"","title":"Visual guide"},{"location":"installation/#macos-notes","text":"MacOS Gatekeeper sometimes blocks new apps from running. To get around that, you might need to right-click the downloaded .dmg file to accept the devloper certificate.","title":"MacOS notes"},{"location":"installation/#linux-notes","text":"You'll need additional libraries installed for the Linux build to run.","title":"Linux notes"},{"location":"installation/#alternate-releases","text":"GitHub Releases has every alternate and past release. The Exokit installer just grabs the latest release from GitHub. The releases are automatically built on every version update of the GitHub repository .","title":"Alternate releases"},{"location":"nativeAPIs/","text":"WebGL WebGL (Web Graphics Library) is a JavaScript API for rendering interactive 3D and 2D graphics within any compatible web browser without the use of plug-ins. WebGL does so by introducing an API that closely conforms to OpenGL ES 2.0 that can be used in HTML5 \\ canvas> elements. Canvas2d Added in HTML5, the HTML \\ canvas> element can be used to draw graphics via scripting in JavaScript. For example, it can be used to draw graphs, make photo compositions, create animations, or even do real-time video processing or rendering. WebAudio The Web Audio API provides a powerful and versatile system for controlling audio on the Web, allowing developers to choose audio sources, add effects to audio, create audio visualizations, apply spatial effects (such as panning) and much more. WebRTC WebRTC (Web Real-Time Communications) is a technology which enables Web applications and sites to capture and optionally stream audio and/or video media, as well as to exchange arbitrary data between browsers without requiring an intermediary. The set of standards that comprises WebRTC makes it possible to share data and perform teleconferencing peer-to-peer, without requiring that the user install plug-ins or any other third-party software. WebRTC consists of several interrelated APIs and protocols which work together to achieve this. The documentation you'll find here will help you understand the fundamentals of WebRTC, how to set up and use both data and media connections, and more. Node Node is the foundation of all that runs our JS, kind of our sturdiest foundation for the whole structure. OpenVR The OpenVR API provides a game with a way to interact with Virtual Reality displays without relying on a specific hardware vendor's SDK. It can be updated independently of the game to add support for new hardware or software updates. The API is implemented as a set of C++ interface classes full of pure virtual functions. When an application initializes the system it will return the interface that matches the header in the SDK used by that application. Once a version of an interface is published, it will be supported in all future versions, so the application will not need to update to a new SDK to move forward to new hardware and other features. Other Integrations OVR Oculus MLSDK Magic Leap Leap Motion Leap motion hand tracking Chromium Chromium Web Browser Support More Info To see a list of our current integrations, check out our Tech Stack","title":"nativeAPIs"},{"location":"nativeAPIs/#webgl","text":"WebGL (Web Graphics Library) is a JavaScript API for rendering interactive 3D and 2D graphics within any compatible web browser without the use of plug-ins. WebGL does so by introducing an API that closely conforms to OpenGL ES 2.0 that can be used in HTML5 \\ canvas> elements.","title":"WebGL"},{"location":"nativeAPIs/#canvas2d","text":"Added in HTML5, the HTML \\ canvas> element can be used to draw graphics via scripting in JavaScript. For example, it can be used to draw graphs, make photo compositions, create animations, or even do real-time video processing or rendering.","title":"Canvas2d"},{"location":"nativeAPIs/#webaudio","text":"The Web Audio API provides a powerful and versatile system for controlling audio on the Web, allowing developers to choose audio sources, add effects to audio, create audio visualizations, apply spatial effects (such as panning) and much more.","title":"WebAudio"},{"location":"nativeAPIs/#webrtc","text":"WebRTC (Web Real-Time Communications) is a technology which enables Web applications and sites to capture and optionally stream audio and/or video media, as well as to exchange arbitrary data between browsers without requiring an intermediary. The set of standards that comprises WebRTC makes it possible to share data and perform teleconferencing peer-to-peer, without requiring that the user install plug-ins or any other third-party software. WebRTC consists of several interrelated APIs and protocols which work together to achieve this. The documentation you'll find here will help you understand the fundamentals of WebRTC, how to set up and use both data and media connections, and more.","title":"WebRTC"},{"location":"nativeAPIs/#node","text":"Node is the foundation of all that runs our JS, kind of our sturdiest foundation for the whole structure.","title":"Node"},{"location":"nativeAPIs/#openvr","text":"The OpenVR API provides a game with a way to interact with Virtual Reality displays without relying on a specific hardware vendor's SDK. It can be updated independently of the game to add support for new hardware or software updates. The API is implemented as a set of C++ interface classes full of pure virtual functions. When an application initializes the system it will return the interface that matches the header in the SDK used by that application. Once a version of an interface is published, it will be supported in all future versions, so the application will not need to update to a new SDK to move forward to new hardware and other features.","title":"OpenVR"},{"location":"nativeAPIs/#other-integrations","text":"OVR Oculus MLSDK Magic Leap Leap Motion Leap motion hand tracking Chromium Chromium Web Browser Support","title":"Other Integrations"},{"location":"nativeAPIs/#more-info","text":"To see a list of our current integrations, check out our Tech Stack","title":"More Info"},{"location":"nativeFutureIntegrations/","text":"As it stands, the current objectives for what we hope to integrate going forward are the following: Unity Exokit engine is a Node.js module, so it's relatively straightforward to add native bindings to other engines like Unity, in either direction. If you have a use case you'd like supported here, let us know. Electron We often get asked how to use Exokit on top of an existing Electron app to power the WebGL/WebXR parts. This needs to be documented. Ethereum This is another thing that we've experimented with for a while, and we're interested in the blockchain possibility. While we don't want Exokit to become a vehicle for token speculation, we think there could be a place for some sort of subscription model or notion of app ownership in alliance with Cryptocurrency use. This isn't strictly about Ethereum but blockchains in general. ARCore + ARKit We would love to have the Exokit Engine core run on these, taking in matrices from the phone and working with any WebXR/Exokit content is a big step to take and we are all about it. We've run experiments with both so far so its definitely in the cards. ARCore is much easier than ARKit because Apple isn't very flexible here (no dynarec, no V8). But either way this would not be a new Exokit Engine, it would be the same Exokit Engine so whatever content runs today would just auto-magically run on the phone. Like tabletop Emukit, this also applies to Daydream/VR for these devices. And most recently, with our newest addition of Emukit (our VR-based Console Emulator), we hope to support consoles and emulators as well. To see a list of our current integrations, check out our Tech Stack","title":"nativeFutureIntegrations"},{"location":"nativeFutureIntegrations/#unity","text":"Exokit engine is a Node.js module, so it's relatively straightforward to add native bindings to other engines like Unity, in either direction. If you have a use case you'd like supported here, let us know.","title":"Unity"},{"location":"nativeFutureIntegrations/#electron","text":"We often get asked how to use Exokit on top of an existing Electron app to power the WebGL/WebXR parts. This needs to be documented.","title":"Electron"},{"location":"nativeFutureIntegrations/#ethereum","text":"This is another thing that we've experimented with for a while, and we're interested in the blockchain possibility. While we don't want Exokit to become a vehicle for token speculation, we think there could be a place for some sort of subscription model or notion of app ownership in alliance with Cryptocurrency use. This isn't strictly about Ethereum but blockchains in general.","title":"Ethereum"},{"location":"nativeFutureIntegrations/#arcore-arkit","text":"We would love to have the Exokit Engine core run on these, taking in matrices from the phone and working with any WebXR/Exokit content is a big step to take and we are all about it. We've run experiments with both so far so its definitely in the cards. ARCore is much easier than ARKit because Apple isn't very flexible here (no dynarec, no V8). But either way this would not be a new Exokit Engine, it would be the same Exokit Engine so whatever content runs today would just auto-magically run on the phone. Like tabletop Emukit, this also applies to Daydream/VR for these devices. And most recently, with our newest addition of Emukit (our VR-based Console Emulator), we hope to support consoles and emulators as well. To see a list of our current integrations, check out our Tech Stack","title":"ARCore + ARKit"},{"location":"privacy/","text":"This privacy policy discloses the privacy practices for Exokit products. This privacy policy applies solely to information collected by Exokit products. It will notify you of the following: What personally identifiable information is collected from you through Exokit products, how it is used and with whom it may be shared. What choices are available to you regarding the use of your data. The security procedures in place to protect the misuse of your information. How you can correct any inaccuracies in the information. Information Collection, Use, and Sharing We are the sole owners of the information collected on Exokit products. We only have access to/collect information that you voluntarily give us via sign-up or other direct contact from you. We will not sell or rent this information to anyone. We track a unique identifier number in product builds to get better insight of how users use Exokit products. We will use your information to respond to you, regarding the reason you contacted us. We will not share your information with any third party outside of our organization, other than as necessary to fulfill your request, e.g. to ship an order. Unless you ask us not to, we may contact you via email in the future to tell you about specials, new products or services, or changes to this privacy policy. Your Access to and Control Over Information You may opt out of any future contacts from us at any time. You can do the following at any time by contacting us via the email address: hello@webmr.io See what data we have about you, if any. Change/correct any data we have about you. Have us delete any data we have about you. Express any concern you have about our use of your data. Security We take precautions to protect your information. When you submit sensitive information via Exokit products, your information is protected both online and offline. Wherever we collect sensitive information (such as credit card data), that information is encrypted and transmitted to us in a secure way. You can verify this by looking for a lock icon in the address bar and looking for \"https\" at the beginning of the address of the Web page. While we use encryption to protect sensitive information transmitted online, we also protect your information offline. Only employees who need the information to perform a specific job (for example, billing or customer service) are granted access to personally identifiable information. The computers/servers in which we store personally identifiable information are kept in a secure environment. If you feel that we are not abiding by this privacy policy, you should contact us immediately via email at: hello@webmr.io . Registration In order to use Exokit products, a user must first complete the sign-up form. During registration a user is required to give certain information (card info, email address and password). This information is used to contact you about the products/services on our site in which you have expressed interest. The main purpose of user information taken from registration is to facilitate the payment system and sign-in features. Orders We request information from you on our order form. To buy from us, you must provide contact information (email address) and financial information (like credit card number, expiration date). This information is used for billing purposes and to fill your orders. If we have trouble processing an order, we'll use this information to contact you. Links Exokit products contain links to other sites. Please be aware that we are not responsible for the content or privacy practices of such other sites. We encourage our users to be aware when they leave our site and to read the privacy statements of any other site that collects personally identifiable information.","title":"privacy"},{"location":"privacy/#information-collection-use-and-sharing","text":"We are the sole owners of the information collected on Exokit products. We only have access to/collect information that you voluntarily give us via sign-up or other direct contact from you. We will not sell or rent this information to anyone. We track a unique identifier number in product builds to get better insight of how users use Exokit products. We will use your information to respond to you, regarding the reason you contacted us. We will not share your information with any third party outside of our organization, other than as necessary to fulfill your request, e.g. to ship an order. Unless you ask us not to, we may contact you via email in the future to tell you about specials, new products or services, or changes to this privacy policy.","title":"Information Collection, Use, and Sharing"},{"location":"privacy/#your-access-to-and-control-over-information","text":"You may opt out of any future contacts from us at any time. You can do the following at any time by contacting us via the email address: hello@webmr.io See what data we have about you, if any. Change/correct any data we have about you. Have us delete any data we have about you. Express any concern you have about our use of your data.","title":"Your Access to and Control Over Information"},{"location":"privacy/#security","text":"We take precautions to protect your information. When you submit sensitive information via Exokit products, your information is protected both online and offline. Wherever we collect sensitive information (such as credit card data), that information is encrypted and transmitted to us in a secure way. You can verify this by looking for a lock icon in the address bar and looking for \"https\" at the beginning of the address of the Web page. While we use encryption to protect sensitive information transmitted online, we also protect your information offline. Only employees who need the information to perform a specific job (for example, billing or customer service) are granted access to personally identifiable information. The computers/servers in which we store personally identifiable information are kept in a secure environment. If you feel that we are not abiding by this privacy policy, you should contact us immediately via email at: hello@webmr.io .","title":"Security"},{"location":"privacy/#registration","text":"In order to use Exokit products, a user must first complete the sign-up form. During registration a user is required to give certain information (card info, email address and password). This information is used to contact you about the products/services on our site in which you have expressed interest. The main purpose of user information taken from registration is to facilitate the payment system and sign-in features.","title":"Registration"},{"location":"privacy/#orders","text":"We request information from you on our order form. To buy from us, you must provide contact information (email address) and financial information (like credit card number, expiration date). This information is used for billing purposes and to fill your orders. If we have trouble processing an order, we'll use this information to contact you.","title":"Orders"},{"location":"privacy/#links","text":"Exokit products contain links to other sites. Please be aware that we are not responsible for the content or privacy practices of such other sites. We encourage our users to be aware when they leave our site and to read the privacy statements of any other site that collects personally identifiable information.","title":"Links"},{"location":"sdk/","text":"SDK Bundle The SDK bundle includes Exokit engine, which lets you run apps (regular web sites) in Exokit. Exokit is a fast browser engine, without the browser (though you can use it to build a browser !) SDK components There are two main parts to the Exokit SDK: - Web APIs - Native integrations Web APIs Exokit engine runs regular HTML sites. If the site uses WebXR , WebGL , WebAudio , and other multimedia web specifications, it should work on Exokit (if it doesn't, please file a bug !) This means existing web documentation applies to Exokit as well. Read more at : Web APIs Native integrations Exokit includes additional support for interfacing with hardware like Magic Leap and Leap Motion. These are generally exposed on the browser object. For example, for Electron texture streaming: const electron = await browser.electron.createElectron(); const browserWindow = await electron.createBrowserWindow(); browserWindow.loadURL( https://google.com/ ); browserWindow.on( paint , message = { // ... }); Read more at : Native APIs","title":"sdk"},{"location":"sdk/#sdk-bundle","text":"The SDK bundle includes Exokit engine, which lets you run apps (regular web sites) in Exokit. Exokit is a fast browser engine, without the browser (though you can use it to build a browser !)","title":"SDK Bundle"},{"location":"sdk/#sdk-components","text":"There are two main parts to the Exokit SDK: - Web APIs - Native integrations","title":"SDK components"},{"location":"sdk/#web-apis","text":"Exokit engine runs regular HTML sites. If the site uses WebXR , WebGL , WebAudio , and other multimedia web specifications, it should work on Exokit (if it doesn't, please file a bug !) This means existing web documentation applies to Exokit as well. Read more at : Web APIs","title":"Web APIs"},{"location":"sdk/#native-integrations","text":"Exokit includes additional support for interfacing with hardware like Magic Leap and Leap Motion. These are generally exposed on the browser object. For example, for Electron texture streaming: const electron = await browser.electron.createElectron(); const browserWindow = await electron.createBrowserWindow(); browserWindow.loadURL( https://google.com/ ); browserWindow.on( paint , message = { // ... }); Read more at : Native APIs","title":"Native integrations"},{"location":"startDevelopment/","text":"The main project repository is at webmixedreality/exokit . You can clone it the regular way: git clone https://github.com/webmixedreality/exokit.git Note: Exokit Engine and Exokit Browser both run off of the same codebase. Install and build All of the Exokit depedencies and native code can be build with npm install : npm install Linux dependencies Linux additionally requires that you install some local dependencies. For debian / ubuntu they are: apt-get install -y \\ build-essential wget python libglfw3-dev libglew-dev libfreetype6-dev libfontconfig1-dev uuid-dev libxcursor-dev libxinerama-dev libxi-dev libasound2-dev libexpat1-dev Notes Exokit's bindings code is a native module build using the binding.gyp recipe . Exokit downloads and uses several prebuilt dependencies. They have been pre-compiled for all supported architectures and uploaded to npm. They self-extract themselves based off detected architecture. Run Exokit Engine Exokit Engine is just a node module, so you can run it with node. From the exokit git clone directory, do: node . This will start the Exokit Engine CLI. [x] // enter code here Here, you can enter: A URL, which will trigger navigation dom elements dom = assignment expressions Commands to run in the context of the window Note: This is the same experience as you get with the Exokit installer when running Exokit Engine CLI . Logging Exokit has a logging mode enabled by the -l flag: exokit -l https://emukit.webmr.io/ The logs go in $HOME/.exokit/log.txt . For window that generally means C:\\username\\.exokit\\log.txt . Debugging You can use the regular Node debugging tools to debug Exokit Engine. To start Exokit in inspector mode from the exokit git clone directory: node --inspect . After the above you should be able to use chrome://inspect in the Chrome browser to connect to the node running Exokit Engine. You can use this to: Inspect values from the browser Set deugging breakpoints Capture heap snapshots Capture CPU profiles of live sites Wait for attach You may also be interested in starting Exokit Engine so that it doesn't run until you get a chance to attach the inspector. For that you can use: node --inspect-brk . Contributing See something? Please do file an issue ! Pull Requests are very much welcome as well. Troubleshooting SkImage.h not found , or a missing header: this means a prebuilt dependency did not extract. Clear your npm / yarn cache, rm -Rf node_modules and npm install again.","title":"startDevelopment"},{"location":"startDevelopment/#install-and-build","text":"All of the Exokit depedencies and native code can be build with npm install : npm install","title":"Install and build"},{"location":"startDevelopment/#linux-dependencies","text":"Linux additionally requires that you install some local dependencies. For debian / ubuntu they are: apt-get install -y \\ build-essential wget python libglfw3-dev libglew-dev libfreetype6-dev libfontconfig1-dev uuid-dev libxcursor-dev libxinerama-dev libxi-dev libasound2-dev libexpat1-dev","title":"Linux dependencies"},{"location":"startDevelopment/#notes","text":"Exokit's bindings code is a native module build using the binding.gyp recipe . Exokit downloads and uses several prebuilt dependencies. They have been pre-compiled for all supported architectures and uploaded to npm. They self-extract themselves based off detected architecture.","title":"Notes"},{"location":"startDevelopment/#run-exokit-engine","text":"Exokit Engine is just a node module, so you can run it with node. From the exokit git clone directory, do: node . This will start the Exokit Engine CLI. [x] // enter code here Here, you can enter: A URL, which will trigger navigation dom elements dom = assignment expressions Commands to run in the context of the window Note: This is the same experience as you get with the Exokit installer when running Exokit Engine CLI .","title":"Run Exokit Engine"},{"location":"startDevelopment/#logging","text":"Exokit has a logging mode enabled by the -l flag: exokit -l https://emukit.webmr.io/ The logs go in $HOME/.exokit/log.txt . For window that generally means C:\\username\\.exokit\\log.txt .","title":"Logging"},{"location":"startDevelopment/#debugging","text":"You can use the regular Node debugging tools to debug Exokit Engine. To start Exokit in inspector mode from the exokit git clone directory: node --inspect . After the above you should be able to use chrome://inspect in the Chrome browser to connect to the node running Exokit Engine. You can use this to: Inspect values from the browser Set deugging breakpoints Capture heap snapshots Capture CPU profiles of live sites","title":"Debugging"},{"location":"startDevelopment/#wait-for-attach","text":"You may also be interested in starting Exokit Engine so that it doesn't run until you get a chance to attach the inspector. For that you can use: node --inspect-brk .","title":"Wait for attach"},{"location":"startDevelopment/#contributing","text":"See something? Please do file an issue ! Pull Requests are very much welcome as well.","title":"Contributing"},{"location":"startDevelopment/#troubleshooting","text":"SkImage.h not found , or a missing header: this means a prebuilt dependency did not extract. Clear your npm / yarn cache, rm -Rf node_modules and npm install again.","title":"Troubleshooting"},{"location":"support/","text":"GitHub At our GitHub repo browse and sumbit issues or pull requests for bugs you find or any new features you may want implemented. Be sure to check out how to contribute. }) Stay Updated We post announcements and updates to our blog . Follow Exokit on Twitter . Support Join our Slack and Discord to chat and ask questions.","title":"support"},{"location":"support/#github","text":"At our GitHub repo browse and sumbit issues or pull requests for bugs you find or any new features you may want implemented. Be sure to check out how to contribute. })","title":"GitHub"},{"location":"support/#stay-updated","text":"We post announcements and updates to our blog . Follow Exokit on Twitter .","title":"Stay Updated"},{"location":"support/#support","text":"Join our Slack and Discord to chat and ask questions.","title":"Support"},{"location":"techIntegrations/","text":"Here are the main web specifications and third-party libraries implemented in Exokit. Tech Web or Native API Spec Source WebVR Web WebVR Source WebXR Web WebXR Source React Web React Source HTML5 Web HTML5 Source CSS Web CSS Source THREE.js Web THREE.js Source Express Web Express Source WebSockets Web WebSockets Source FetchAPI Web Fetch API Source Web Workers Web Web Workers Source WebGL Native WebGL Source Canvas2d Native Canvas 2D Source WebAudio Native WebAudio Source WebRTC Native WebRTC Source Node Native Node Source OpenVR Native OpenVR Source OVR Native OVR from Oculus Source Magic Leap SDK Native Magic Leap SDK Source Leap Motion Native Leap Motion Orion Source Chromium Native Chromium Source","title":"techIntegrations"},{"location":"terms/","text":"1. Who May Use the Services You may use the Services only if you agree to form a binding contract with Exokit and are not a person barred from receiving services under the laws of the applicable jurisdiction. In any case, you must be at least 13 years old to use the Services. If you are accepting these Terms and using the Services on behalf of a company, organization, government, or other legal entity, you represent and warrant that you are authorized to do so and have the authority to bind such entity to these Terms, in which case the words \u201cyou\u201d and \u201cyour\u201d as used in these Terms shall refer to such entity. ## 2. Privacy You understand that through your use of the Services you consent to the collection and use (as set forth in the Privacy Policy ) of this information, including the transfer of this information to the United States, Canada, and/or other countries for storage, processing and use by Exokit and its affiliates. ## 3. Content on the Services You are responsible for your use of the Services and for any Content you provide, including compliance with applicable laws, rules, and regulations. You should only provide Content that you are comfortable sharing with others. Any use or reliance on any Content or materials posted via the Services or obtained by you through the Services is at your own risk. We do not endorse, support, represent or guarantee the completeness, truthfulness, accuracy, or reliability of any Content or communications posted via the Services or endorse any opinions expressed via the Services. You understand that by using the Services, you may be exposed to Content that might be offensive, harmful, inaccurate or otherwise inappropriate, or in some cases, postings that have been mislabeled or are otherwise deceptive. All Content is the sole responsibility of the person who originated such Content. We may not monitor or control the Content posted via the Services and, we cannot take responsibility for such Content. We reserve the right to remove Content that violates the User Agreement, including for example, copyright or trademark violations, impersonation, unlawful conduct, or harassment. Your Rights and Grant of Rights in the Content You retain your rights to any Content you submit, post or display on or through the Services. What\u2019s yours is yours \u2014 you own your Content (and your incorporated audio, photos and videos are considered part of the Content). You represent and warrant that you have, or have obtained, all rights, licenses, consents, permissions, power and/or authority necessary to grant the rights granted herein for any Content that you submit, post or display on or through the Services. You agree that such Content will not contain material subject to copyright or other proprietary rights, unless you have necessary permission or are otherwise legally entitled to post the material. 4. Using the Services You may use the Services only in compliance with these Terms and all applicable laws, rules and regulations. Our Services evolve constantly. As such, the Services may change from time to time, at our discretion. We may stop (permanently or temporarily) providing the Services or any features within the Services to you or to users generally. We also retain the right to create limits on use and storage at our sole discretion at any time. We may also remove or refuse to distribute any Content on the Services and to suspend or terminate users. In consideration for Exokit granting you access to and use of the Services, you agree not to misuse our Services, for example, by interfering with them or accessing them using a method other than the interface and the instructions that we provide. You may not do any of the following while accessing or using the Services: (i) access, tamper with, or use non-public areas of the Services, Exokit\u2019s computer systems, or the technical delivery systems of Exokit\u2019s providers; (ii) probe, scan, or test the vulnerability of any system or network or breach or circumvent any security or authentication measures; (iii) access or search or attempt to access or search the Services by any means (automated or otherwise) other than through our currently available, published interfaces that are provided by Exokit (and only pursuant to the applicable terms and conditions), unless you have been specifically allowed to do so in a separate agreement with Exokit. (iv) forge any TCP/IP packet header or any part of the header information in any email or posting, or in any way use the Services to send altered, deceptive or false source-identifying information; or (v) interfere with, or disrupt, (or attempt to do so), the access of any user, host or network, including, without limitation, sending a virus, overloading, flooding, spamming, mail-bombing the Services, or by scripting the creation of Content in such a manner as to interfere with or create an undue burden on the Services. We also reserve the right to access, read, preserve, and disclose any information as we reasonably believe is necessary to (i) satisfy any applicable law, regulation, legal process or governmental request, (ii) enforce the Terms, including investigation of potential violations hereof, (iii) detect, prevent, or otherwise address fraud, security or technical issues, (iv) respond to user support requests, or (v) protect the rights, property or safety of Exokit, its users and the public. Exokit does not disclose personally-identifying information to third parties except in accordance with our Privacy Policy . ### Your Account You may need to create an account to use some of our Services. You are responsible for safeguarding your account, so use a strong password and limit its use to this account. We cannot and will not be liable for any loss or damage arising from your failure to comply with the above. Your License to Use the Services Exokit gives you a personal, worldwide, royalty-free, non-assignable and non-exclusive license to use the software provided to you as part of the Services. This license has the sole purpose of enabling you to use and enjoy the benefit of the Services as provided by Exokit, in the manner permitted by these Terms. The Services are protected by copyright, trademark, and other laws of both the United States and foreign countries. Nothing in the Terms gives you a right to use the Exokit name or any of the Exokit trademarks, logos, domain names, and other distinctive brand features. All right, title, and interest in and to the Services (excluding Content provided by users) are and will remain the exclusive property of Exokit and its licensors. Any feedback, comments, or suggestions you may provide regarding Exokit, or the Services is entirely voluntary and we will be free to use such feedback, comments or suggestions as we see fit and without any obligation to you. 5. Disclaimers and Limitations of Liability The Services are Available \"AS-IS\" Your access to and use of the Services or any Content are at your own risk. You understand and agree that the Services are provided to you on an \u201cAS IS\u201d and \u201cAS AVAILABLE\u201d basis. The \u201cExokit Entities\u201d refers to Exokit, its parents, affiliates, related companies, officers, directors, employees, agents, representatives, partners, and licensors. Without limiting the foregoing, to the maximum extent permitted under applicable law, THE EXOKIT ENTITIES DISCLAIM ALL WARRANTIES AND CONDITIONS, WHETHER EXPRESS OR IMPLIED, OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. The Exokit Entities make no warranty or representation and disclaim all responsibility and liability for: (i) the completeness, accuracy, availability, timeliness, security or reliability of the Services or any Content; (ii) any harm to your computer system, loss of data, or other harm that results from your access to or use of the Services or any Content; (iii) the deletion of, or the failure to store or to transmit, any Content and other communications maintained by the Services; and (iv) whether the Services will meet your requirements or be available on an uninterrupted, secure, or error-free basis. No advice or information, whether oral or written, obtained from the Exokit Entities or through the Services, will create any warranty or representation not expressly made herein. Limitation of Liability TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THE EXOKIT ENTITIES SHALL NOT BE LIABLE FOR ANY INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL OR PUNITIVE DAMAGES, OR ANY LOSS OF PROFITS OR REVENUES, WHETHER INCURRED DIRECTLY OR INDIRECTLY, OR ANY LOSS OF DATA, USE, GOODWILL, OR OTHER INTANGIBLE LOSSES, RESULTING FROM (i) YOUR ACCESS TO OR USE OF OR INABILITY TO ACCESS OR USE THE SERVICES; (ii) ANY CONDUCT OR CONTENT OF ANY THIRD PARTY ON THE SERVICES, INCLUDING WITHOUT LIMITATION, ANY DEFAMATORY, OFFENSIVE OR ILLEGAL CONDUCT OF OTHER USERS OR THIRD PARTIES; (iii) ANY CONTENT OBTAINED FROM THE SERVICES; OR (iv) UNAUTHORIZED ACCESS, USE OR ALTERATION OF YOUR TRANSMISSIONS OR CONTENT. IN NO EVENT SHALL THE AGGREGATE LIABILITY OF THE EXOKIT ENTITIES EXCEED THE GREATER OF ONE HUNDRED U.S. DOLLARS (U.S. $100.00) OR THE AMOUNT YOU PAID EXOKIT, IF ANY, IN THE PAST SIX MONTHS FOR THE SERVICES GIVING RISE TO THE CLAIM. THE LIMITATIONS OF THIS SUBSECTION SHALL APPLY TO ANY THEORY OF LIABILITY, WHETHER BASED ON WARRANTY, CONTRACT, STATUTE, TORT (INCLUDING NEGLIGENCE) OR OTHERWISE, AND WHETHER OR NOT THE EXOKIT ENTITIES HAVE BEEN INFORMED OF THE POSSIBILITY OF ANY SUCH DAMAGE, AND EVEN IF A REMEDY SET FORTH HEREIN IS FOUND TO HAVE FAILED OF ITS ESSENTIAL PURPOSE. If you are outside the country By using the Services you agree that Exokit, its parents, affiliates, related companies, officers, directors, employees, agents representatives, partners and licensors, liability is limited to the maximum extent permissible in your country of residence.","title":"terms"},{"location":"terms/#1-who-may-use-the-services","text":"You may use the Services only if you agree to form a binding contract with Exokit and are not a person barred from receiving services under the laws of the applicable jurisdiction. In any case, you must be at least 13 years old to use the Services. If you are accepting these Terms and using the Services on behalf of a company, organization, government, or other legal entity, you represent and warrant that you are authorized to do so and have the authority to bind such entity to these Terms, in which case the words \u201cyou\u201d and \u201cyour\u201d as used in these Terms shall refer to such entity. ## 2. Privacy You understand that through your use of the Services you consent to the collection and use (as set forth in the Privacy Policy ) of this information, including the transfer of this information to the United States, Canada, and/or other countries for storage, processing and use by Exokit and its affiliates. ## 3. Content on the Services You are responsible for your use of the Services and for any Content you provide, including compliance with applicable laws, rules, and regulations. You should only provide Content that you are comfortable sharing with others. Any use or reliance on any Content or materials posted via the Services or obtained by you through the Services is at your own risk. We do not endorse, support, represent or guarantee the completeness, truthfulness, accuracy, or reliability of any Content or communications posted via the Services or endorse any opinions expressed via the Services. You understand that by using the Services, you may be exposed to Content that might be offensive, harmful, inaccurate or otherwise inappropriate, or in some cases, postings that have been mislabeled or are otherwise deceptive. All Content is the sole responsibility of the person who originated such Content. We may not monitor or control the Content posted via the Services and, we cannot take responsibility for such Content. We reserve the right to remove Content that violates the User Agreement, including for example, copyright or trademark violations, impersonation, unlawful conduct, or harassment.","title":"1. Who May Use the Services"},{"location":"terms/#your-rights-and-grant-of-rights-in-the-content","text":"You retain your rights to any Content you submit, post or display on or through the Services. What\u2019s yours is yours \u2014 you own your Content (and your incorporated audio, photos and videos are considered part of the Content). You represent and warrant that you have, or have obtained, all rights, licenses, consents, permissions, power and/or authority necessary to grant the rights granted herein for any Content that you submit, post or display on or through the Services. You agree that such Content will not contain material subject to copyright or other proprietary rights, unless you have necessary permission or are otherwise legally entitled to post the material.","title":"Your Rights and Grant of Rights in the Content"},{"location":"terms/#4-using-the-services","text":"You may use the Services only in compliance with these Terms and all applicable laws, rules and regulations. Our Services evolve constantly. As such, the Services may change from time to time, at our discretion. We may stop (permanently or temporarily) providing the Services or any features within the Services to you or to users generally. We also retain the right to create limits on use and storage at our sole discretion at any time. We may also remove or refuse to distribute any Content on the Services and to suspend or terminate users. In consideration for Exokit granting you access to and use of the Services, you agree not to misuse our Services, for example, by interfering with them or accessing them using a method other than the interface and the instructions that we provide. You may not do any of the following while accessing or using the Services: (i) access, tamper with, or use non-public areas of the Services, Exokit\u2019s computer systems, or the technical delivery systems of Exokit\u2019s providers; (ii) probe, scan, or test the vulnerability of any system or network or breach or circumvent any security or authentication measures; (iii) access or search or attempt to access or search the Services by any means (automated or otherwise) other than through our currently available, published interfaces that are provided by Exokit (and only pursuant to the applicable terms and conditions), unless you have been specifically allowed to do so in a separate agreement with Exokit. (iv) forge any TCP/IP packet header or any part of the header information in any email or posting, or in any way use the Services to send altered, deceptive or false source-identifying information; or (v) interfere with, or disrupt, (or attempt to do so), the access of any user, host or network, including, without limitation, sending a virus, overloading, flooding, spamming, mail-bombing the Services, or by scripting the creation of Content in such a manner as to interfere with or create an undue burden on the Services. We also reserve the right to access, read, preserve, and disclose any information as we reasonably believe is necessary to (i) satisfy any applicable law, regulation, legal process or governmental request, (ii) enforce the Terms, including investigation of potential violations hereof, (iii) detect, prevent, or otherwise address fraud, security or technical issues, (iv) respond to user support requests, or (v) protect the rights, property or safety of Exokit, its users and the public. Exokit does not disclose personally-identifying information to third parties except in accordance with our Privacy Policy . ### Your Account You may need to create an account to use some of our Services. You are responsible for safeguarding your account, so use a strong password and limit its use to this account. We cannot and will not be liable for any loss or damage arising from your failure to comply with the above.","title":"4. Using the Services"},{"location":"terms/#your-license-to-use-the-services","text":"Exokit gives you a personal, worldwide, royalty-free, non-assignable and non-exclusive license to use the software provided to you as part of the Services. This license has the sole purpose of enabling you to use and enjoy the benefit of the Services as provided by Exokit, in the manner permitted by these Terms. The Services are protected by copyright, trademark, and other laws of both the United States and foreign countries. Nothing in the Terms gives you a right to use the Exokit name or any of the Exokit trademarks, logos, domain names, and other distinctive brand features. All right, title, and interest in and to the Services (excluding Content provided by users) are and will remain the exclusive property of Exokit and its licensors. Any feedback, comments, or suggestions you may provide regarding Exokit, or the Services is entirely voluntary and we will be free to use such feedback, comments or suggestions as we see fit and without any obligation to you.","title":"Your License to Use the Services"},{"location":"terms/#5-disclaimers-and-limitations-of-liability","text":"","title":"5. Disclaimers and Limitations of Liability"},{"location":"terms/#the-services-are-available-as-is","text":"Your access to and use of the Services or any Content are at your own risk. You understand and agree that the Services are provided to you on an \u201cAS IS\u201d and \u201cAS AVAILABLE\u201d basis. The \u201cExokit Entities\u201d refers to Exokit, its parents, affiliates, related companies, officers, directors, employees, agents, representatives, partners, and licensors. Without limiting the foregoing, to the maximum extent permitted under applicable law, THE EXOKIT ENTITIES DISCLAIM ALL WARRANTIES AND CONDITIONS, WHETHER EXPRESS OR IMPLIED, OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. The Exokit Entities make no warranty or representation and disclaim all responsibility and liability for: (i) the completeness, accuracy, availability, timeliness, security or reliability of the Services or any Content; (ii) any harm to your computer system, loss of data, or other harm that results from your access to or use of the Services or any Content; (iii) the deletion of, or the failure to store or to transmit, any Content and other communications maintained by the Services; and (iv) whether the Services will meet your requirements or be available on an uninterrupted, secure, or error-free basis. No advice or information, whether oral or written, obtained from the Exokit Entities or through the Services, will create any warranty or representation not expressly made herein.","title":"The Services are Available \"AS-IS\""},{"location":"terms/#limitation-of-liability","text":"TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THE EXOKIT ENTITIES SHALL NOT BE LIABLE FOR ANY INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL OR PUNITIVE DAMAGES, OR ANY LOSS OF PROFITS OR REVENUES, WHETHER INCURRED DIRECTLY OR INDIRECTLY, OR ANY LOSS OF DATA, USE, GOODWILL, OR OTHER INTANGIBLE LOSSES, RESULTING FROM (i) YOUR ACCESS TO OR USE OF OR INABILITY TO ACCESS OR USE THE SERVICES; (ii) ANY CONDUCT OR CONTENT OF ANY THIRD PARTY ON THE SERVICES, INCLUDING WITHOUT LIMITATION, ANY DEFAMATORY, OFFENSIVE OR ILLEGAL CONDUCT OF OTHER USERS OR THIRD PARTIES; (iii) ANY CONTENT OBTAINED FROM THE SERVICES; OR (iv) UNAUTHORIZED ACCESS, USE OR ALTERATION OF YOUR TRANSMISSIONS OR CONTENT. IN NO EVENT SHALL THE AGGREGATE LIABILITY OF THE EXOKIT ENTITIES EXCEED THE GREATER OF ONE HUNDRED U.S. DOLLARS (U.S. $100.00) OR THE AMOUNT YOU PAID EXOKIT, IF ANY, IN THE PAST SIX MONTHS FOR THE SERVICES GIVING RISE TO THE CLAIM. THE LIMITATIONS OF THIS SUBSECTION SHALL APPLY TO ANY THEORY OF LIABILITY, WHETHER BASED ON WARRANTY, CONTRACT, STATUTE, TORT (INCLUDING NEGLIGENCE) OR OTHERWISE, AND WHETHER OR NOT THE EXOKIT ENTITIES HAVE BEEN INFORMED OF THE POSSIBILITY OF ANY SUCH DAMAGE, AND EVEN IF A REMEDY SET FORTH HEREIN IS FOUND TO HAVE FAILED OF ITS ESSENTIAL PURPOSE.","title":"Limitation of Liability"},{"location":"terms/#if-you-are-outside-the-country","text":"By using the Services you agree that Exokit, its parents, affiliates, related companies, officers, directors, employees, agents representatives, partners and licensors, liability is limited to the maximum extent permissible in your country of residence.","title":"If you are outside the country"},{"location":"useExokitEngine/","text":"Visual guide Where do I get Exokit Engine? Install Exokit with Exokit installer . Exokit Engine will have been included with the Exokit installer. Open a WebGL site To open a site in Exokit Engine, enter the http / https URL into the CLI. Here's an example: https://threejs.org/examples/webgl_geometry_minecraft_ao.html Paste this in the command window and hit enter . Exokit should load the site. Exokit expects the URL to point to a regular HTML web site which serves as the entrypoint for your app. If Exokit sees that the site requested a WebGLRenderingContext for a canvas , it will open a window to render the contents. Notes You can use a file:///local/path/goes/here or file://C:\\local\\path\\goes\\here URL to load a local file. This is the same thing as doing this in the Exokit CLI: window.location.url = URL_GOES_HERE You can also run the Exokit Engine from any shell, assuming exokit is in your PATH : exokit URL_GOES_HERE Open a WebXR site Exokit supports both WebXR and WebVR . If the site is designed correctly and you have a headset, Exokit should automatically open in XR mode. How it works If you have a headset connected, Exokit will automatically emit vrdisplayactivate events. The site is expected to listen for these events, and start a WebXR or WebVR session in response. The site may also listen for regular keyboard/mouse events to create an XR session, but this is not recommended as it results in a poor user experience. Create an engine example There's a full WebXR example for you to play with on GitHub. You can see more Exokit Apps here!","title":"useExokitEngine"},{"location":"useExokitEngine/#visual-guide","text":"","title":"Visual guide"},{"location":"useExokitEngine/#where-do-i-get-exokit-engine","text":"Install Exokit with Exokit installer . Exokit Engine will have been included with the Exokit installer.","title":"Where do I get Exokit Engine?"},{"location":"useExokitEngine/#open-a-webgl-site","text":"To open a site in Exokit Engine, enter the http / https URL into the CLI. Here's an example: https://threejs.org/examples/webgl_geometry_minecraft_ao.html Paste this in the command window and hit enter . Exokit should load the site. Exokit expects the URL to point to a regular HTML web site which serves as the entrypoint for your app. If Exokit sees that the site requested a WebGLRenderingContext for a canvas , it will open a window to render the contents.","title":"Open a WebGL site"},{"location":"useExokitEngine/#notes","text":"You can use a file:///local/path/goes/here or file://C:\\local\\path\\goes\\here URL to load a local file. This is the same thing as doing this in the Exokit CLI: window.location.url = URL_GOES_HERE You can also run the Exokit Engine from any shell, assuming exokit is in your PATH : exokit URL_GOES_HERE","title":"Notes"},{"location":"useExokitEngine/#open-a-webxr-site","text":"Exokit supports both WebXR and WebVR . If the site is designed correctly and you have a headset, Exokit should automatically open in XR mode.","title":"Open a WebXR site"},{"location":"useExokitEngine/#how-it-works","text":"If you have a headset connected, Exokit will automatically emit vrdisplayactivate events. The site is expected to listen for these events, and start a WebXR or WebVR session in response. The site may also listen for regular keyboard/mouse events to create an XR session, but this is not recommended as it results in a poor user experience.","title":"How it works"},{"location":"useExokitEngine/#create-an-engine-example","text":"There's a full WebXR example for you to play with on GitHub. You can see more Exokit Apps here!","title":"Create an engine example"},{"location":"webAPIs/","text":"WebVR WebVR is an open specification that makes it possible to experience VR in your browser. The goal is to make it easier for everyone to get into VR experiences, no matter what device you have. WebXR WebXR is driving support for accessing virtual reality (VR) and augmented reality (AR) devices, including sensors and head-mounted displays on the Web. React React is a JavaScript library for building user interfaces. Learn what React is all about on their homepage. HTML5 HTML5 is the latest evolution of the standard that defines HTML. The term represents two different concepts. It is a new version of the language HTML, with new elements, attributes, and behaviors, and a larger set of technologies that allows the building of more diverse and powerful Web sites and applications. This set is sometimes called HTML5 friends and often shortened to just HTML5. CSS Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG or XHTML). CSS describes how elements should be rendered on screen, on paper, in speech, or on other media. THREE.js Three.js is a cross-browser JavaScript library and Application Programming Interface (API) used to create and display animated 3D computer graphics in a web browser. Three.js uses WebGL(see WebGL in Native APIs). Express Express is for making JS servers to assist Exokit in creating HTTP requests and other server functions. WebSockets WebSockets are an advanced technology that makes it possible to open an interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply. Fetch API The Fetch API provides an interface for fetching resources (including across the network). It will seem familiar to anyone who has used XMLHttpRequest, but the new API provides a more powerful and flexible feature set. Web Workers Web Workers makes it possible to run a script operation in a background thread separate from the main execution thread of a web application. The advantage of this is that laborious processing can be performed in a separate thread, allowing the main (usually the UI) thread to run without being blocked/slowed down.","title":"webAPIs"},{"location":"webAPIs/#webvr","text":"WebVR is an open specification that makes it possible to experience VR in your browser. The goal is to make it easier for everyone to get into VR experiences, no matter what device you have.","title":"WebVR"},{"location":"webAPIs/#webxr","text":"WebXR is driving support for accessing virtual reality (VR) and augmented reality (AR) devices, including sensors and head-mounted displays on the Web.","title":"WebXR"},{"location":"webAPIs/#react","text":"React is a JavaScript library for building user interfaces. Learn what React is all about on their homepage.","title":"React"},{"location":"webAPIs/#html5","text":"HTML5 is the latest evolution of the standard that defines HTML. The term represents two different concepts. It is a new version of the language HTML, with new elements, attributes, and behaviors, and a larger set of technologies that allows the building of more diverse and powerful Web sites and applications. This set is sometimes called HTML5 friends and often shortened to just HTML5.","title":"HTML5"},{"location":"webAPIs/#css","text":"Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG or XHTML). CSS describes how elements should be rendered on screen, on paper, in speech, or on other media.","title":"CSS"},{"location":"webAPIs/#threejs","text":"Three.js is a cross-browser JavaScript library and Application Programming Interface (API) used to create and display animated 3D computer graphics in a web browser. Three.js uses WebGL(see WebGL in Native APIs).","title":"THREE.js"},{"location":"webAPIs/#express","text":"Express is for making JS servers to assist Exokit in creating HTTP requests and other server functions.","title":"Express"},{"location":"webAPIs/#websockets","text":"WebSockets are an advanced technology that makes it possible to open an interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply.","title":"WebSockets"},{"location":"webAPIs/#fetch-api","text":"The Fetch API provides an interface for fetching resources (including across the network). It will seem familiar to anyone who has used XMLHttpRequest, but the new API provides a more powerful and flexible feature set.","title":"Fetch API"},{"location":"webAPIs/#web-workers","text":"Web Workers makes it possible to run a script operation in a background thread separate from the main execution thread of a web application. The advantage of this is that laborious processing can be performed in a separate thread, allowing the main (usually the UI) thread to run without being blocked/slowed down.","title":"Web Workers"}]}